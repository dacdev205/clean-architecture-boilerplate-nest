model Order {
  id              String    @id @default(uuid()) @db.VarChar(36)
  orderCode       String   @unique @db.VarChar(36)
  status          OrderStatus  @default(New)
  paymentStatus   PaymentStatus @default(Pending) 
  totalAmount     Decimal @db.Decimal(10, 2)
  orderItems      OrderItem[]
  createdAt       DateTime @default(now()) @db.Timestamp
  updatedAt       DateTime @updatedAt @db.Timestamp
 
  userId          String    @map("user_id") @db.VarChar(36)
  affiliateId     String?   @map("affiliate_id") @db.VarChar(36)
  addressId       String    @map("address_id") @db.VarChar(36)
  shippingMethodId String   @map("shipping_method_id")
  paymentMethodId String    @map("payment_method_id") @db.VarChar(36)
  
  user            User      @relation(fields: [userId], references: [id])
  affiliate       Affiliate? @relation(fields: [affiliateId], references: [id])
  address         Address   @relation(fields: [addressId], references: [id])
  shippingMethod  ShippingMethod @relation(fields: [shippingMethodId], references: [id])
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])

  @@map("orders")
}

enum OrderStatus {
  New
  InProcess
  Delivered
  Canceled
  Refunded
}
enum PaymentStatus {
  Pending
  Paid
  Failed
  Refunded
}
